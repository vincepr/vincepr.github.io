import{S as w,i as D,s as E,R as a,k as P,l as S,m as b,h as g,n as c,b as J,J as _,T as L,j as O,U}from"./index.35c6ee88.js";import{t as o}from"./2.50e93f8b.js";function j(n){let t;return{c(){t=P("div"),this.h()},l(e){t=S(e,"DIV",{id:!0,class:!0,style:!0}),b(t).forEach(g),this.h()},h(){c(t,"id",n[2]),c(t,"class",n[0]),c(t,"style",n[1])},m(e,i){J(e,t,i)},p(e,[i]){i&4&&c(t,"id",e[2]),i&1&&c(t,"class",e[0]),i&2&&c(t,"style",e[1])},i:_,o:_,d(e){e&&g(t)}}}const x="particlesLoaded";function k(n,t,e){let{class:i=""}=t,{style:m=""}=t,{options:d={}}=t,{url:f=""}=t,{id:l="tsparticles"}=t,{particlesInit:u}=t;const y=L();let h=l;function I(){if(h){const s=o.dom().find(r=>r.id===h);s&&s.destroy()}}return O(async()=>{if(o.init(),u&&await u(o),I(),l){const s=C=>{y(x,{particles:C}),h=l};let r;if(f)r=await o.loadJSON(l,f);else if(d)r=await o.load(l,d);else{console.error("You must specify options or url to load tsParticles");return}s(r)}else y(x,{particles:void 0})}),U(I),n.$$set=s=>{"class"in s&&e(0,i=s.class),"style"in s&&e(1,m=s.style),"options"in s&&e(3,d=s.options),"url"in s&&e(4,f=s.url),"id"in s&&e(2,l=s.id),"particlesInit"in s&&e(5,u=s.particlesInit)},[i,m,l,d,f,u]}class R extends w{constructor(t){super(),D(this,t,k,j,E,{class:0,style:1,options:3,url:4,id:2,particlesInit:5})}get class(){return this.$$.ctx[0]}set class(t){this.$$set({class:t}),a()}get style(){return this.$$.ctx[1]}set style(t){this.$$set({style:t}),a()}get options(){return this.$$.ctx[3]}set options(t){this.$$set({options:t}),a()}get url(){return this.$$.ctx[4]}set url(t){this.$$set({url:t}),a()}get id(){return this.$$.ctx[2]}set id(t){this.$$set({id:t}),a()}get particlesInit(){return this.$$.ctx[5]}set particlesInit(t){this.$$set({particlesInit:t}),a()}}export{R as default};
